import os
from supabase import create_client
from openai import OpenAI
from dotenv import load_dotenv

load_dotenv()

# ‚õìÔ∏è Supabase
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_ROLE_KEY = os.getenv("SUPABASE_KEY")
supabase = create_client(SUPABASE_URL, SUPABASE_ROLE_KEY)

# ü§ñ OpenAI
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
MODEL = "gpt-3.5-turbo"

def generate_description(name, category, city):
    prompt = (
        f"–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –∏ –∫—Ä–∞—Å–∏–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
        f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
        f"–ì–æ—Ä–æ–¥: {city}\n\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ:"
    )

    try:
        response = client.chat.completions.create(
            model=MODEL,
            messages=[
                {"role": "system", "content": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.7,
            max_tokens=150
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ GPT –ø—Ä–∏ –æ–ø–∏—Å–∞–Ω–∏–∏ '{name}': {e}")
        return None

def update_descriptions():
    print("üîç –ü–æ–ª—É—á–∞–µ–º –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã –±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è...")

    data = supabase.table("attractions") \
        .select("id, name, category, city, description") \
        .or_("description.is.null,description.eq.–î–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑ –Ø–Ω–¥–µ–∫—Å API") \
        .limit(1000) \
        .execute()

    attractions = data.data
    print(f"üß† –ù—É–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è {len(attractions)} –æ–±—ä–µ–∫—Ç–æ–≤\n")

    for item in attractions:
        name = item["name"]
        category = item.get("category") or "–¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
        city = item.get("city") or "–≥–æ—Ä–æ–¥"
        new_description = generate_description(name, category, city)

        if new_description:
            supabase.table("attractions") \
                .update({"description": new_description}) \
                .eq("id", item["id"]) \
                .execute()
            print(f"‚úÖ {name} ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
        else:
            print(f"‚õî {name} ‚Äî –æ—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")

if __name__ == "__main__":
    update_descriptions()